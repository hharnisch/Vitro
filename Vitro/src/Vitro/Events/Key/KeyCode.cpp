#include "_pch.h"
#include "KeyCode.h"

#define $ToString(x) case KeyCode::x: return os << #x

namespace Vitro
{
	std::ostream& operator<<(std::ostream& os, KeyCode code)
	{
		switch(code)
		{
			$ToString(Backspace);
			$ToString(Tab);
			$ToString(Clear);
			$ToString(Enter);
			$ToString(Shift);
			$ToString(Control);
			$ToString(Alt);
			$ToString(Pause);
			$ToString(CapsLock);
			$ToString(Escape);
			$ToString(Space);
			$ToString(PageUp);
			$ToString(PageDown);
			$ToString(End);
			$ToString(Home);
			$ToString(ArrowLeft);
			$ToString(ArrowUp);
			$ToString(ArrowRight);
			$ToString(ArrowDown);
			$ToString(Select);
			$ToString(Print);
			$ToString(Execute);
			$ToString(PrintScreen);
			$ToString(Insert);
			$ToString(Delete);
			$ToString(Help);
			$ToString(A);
			$ToString(B);
			$ToString(C);
			$ToString(D);
			$ToString(E);
			$ToString(F);
			$ToString(G);
			$ToString(H);
			$ToString(I);
			$ToString(J);
			$ToString(K);
			$ToString(L);
			$ToString(M);
			$ToString(N);
			$ToString(O);
			$ToString(P);
			$ToString(Q);
			$ToString(R);
			$ToString(S);
			$ToString(T);
			$ToString(U);
			$ToString(V);
			$ToString(W);
			$ToString(X);
			$ToString(Y);
			$ToString(Z);
			$ToString(SuperLeft);
			$ToString(SuperRight);
			$ToString(Menu);
			$ToString(Sleep);
			$ToString(Pad0);
			$ToString(Pad1);
			$ToString(Pad2);
			$ToString(Pad3);
			$ToString(Pad4);
			$ToString(Pad5);
			$ToString(Pad6);
			$ToString(Pad7);
			$ToString(Pad8);
			$ToString(Pad9);
			$ToString(Multiply);
			$ToString(Add);
			$ToString(Separator);
			$ToString(Subtract);
			$ToString(Decimal);
			$ToString(Divide);
			$ToString(F1);
			$ToString(F2);
			$ToString(F3);
			$ToString(F4);
			$ToString(F5);
			$ToString(F6);
			$ToString(F7);
			$ToString(F8);
			$ToString(F9);
			$ToString(F10);
			$ToString(F11);
			$ToString(F12);
			$ToString(F13);
			$ToString(F14);
			$ToString(F15);
			$ToString(F16);
			$ToString(F17);
			$ToString(F18);
			$ToString(F19);
			$ToString(F20);
			$ToString(F21);
			$ToString(F22);
			$ToString(F23);
			$ToString(F24);
			$ToString(NumLock);
			$ToString(ScrollLock);
			$ToString(OEM26);
			$ToString(OEM27);
			$ToString(OEM28);
			$ToString(OEM29);
			$ToString(OEM30);
			$ToString(ShiftLeft);
			$ToString(ShiftRight);
			$ToString(ControlLeft);
			$ToString(ControlRight);
			$ToString(MenuLeft);
			$ToString(MenuRight);
			$ToString(WebBack);
			$ToString(WebForward);
			$ToString(WebRefresh);
			$ToString(WebStop);
			$ToString(WebSearch);
			$ToString(WebFavorites);
			$ToString(WebHome);
			$ToString(VolumeMute);
			$ToString(VolumeDown);
			$ToString(VolumeUp);
			$ToString(MediaNext);
			$ToString(MediaPrevious);
			$ToString(MediaStop);
			$ToString(MediaPlayPause);
			$ToString(Mail);
			$ToString(MediaSelect);
			$ToString(LaunchApp1);
			$ToString(LaunchApp2);
			$ToString(OEM1);
			$ToString(OEM2);
			$ToString(OEM3);
			$ToString(OEM4);
			$ToString(OEM5);
			$ToString(OEM6);
			$ToString(OEM7);
			$ToString(OEM8);
			$ToString(OEM9);
			$ToString(OEM10);
			$ToString(OEM11);
			$ToString(Process);
			$ToString(OEM12);
			$ToString(Unicode);
			$ToString(OEM13);
			$ToString(OEM14);
			$ToString(OEM15);
			$ToString(OEM16);
			$ToString(OEM17);
			$ToString(OEM18);
			$ToString(OEM19);
			$ToString(OEM20);
			$ToString(OEM21);
			$ToString(OEM22);
			$ToString(OEM23);
			$ToString(OEM24);
			$ToString(OEM25);
			case KeyCode::Number0:		return os << '0';
			case KeyCode::Number1:		return os << '1';
			case KeyCode::Number2:		return os << '2';
			case KeyCode::Number3:		return os << '3';
			case KeyCode::Number4:		return os << '4';
			case KeyCode::Number5:		return os << '5';
			case KeyCode::Number6:		return os << '6';
			case KeyCode::Number7:		return os << '7';
			case KeyCode::Number8:		return os << '8';
			case KeyCode::Number9:		return os << '9';
			case KeyCode::Plus:			return os << '+';
			case KeyCode::Comma:		return os << ',';
			case KeyCode::Minus:		return os << '-';
			case KeyCode::Period:		return os << '.';
			case KeyCode::AngleBracket:	return os << '<';
		}
		return os << "Unknown key code " << static_cast<int>(code);
	}
}
